---
- name: Install packages for BeeGFS metadata server
  package:
    name: beegfs-meta
    state: "{{ beegfs_package_action }}"
  become: true
  notify: Restart BeeGFS meta service

- name: Store variable in updatable var
  set_fact:
    meta: "{{ meta_item }}"

- name: Set default mgmtd port
  set_fact:
    meta: "{{ meta | combine({'port_tcp': '8005'}) }}"
  when: meta.port_tcp is not defined

- name: Set default meta config path
  set_fact:
    meta: "{{ meta | combine({'config_path': '/etc/beegfs/' + (meta.port_tcp | string) + '.d/beegfs-meta.conf'}) }}"
  when: meta.config_path is not defined

- name: Set default meta directory
  set_fact:
    meta: "{{ meta | combine({'directory': '/data/beegfs/beegfs_meta/' + (meta.port_tcp | string) }) }}"
  when: meta.directory is not defined

- name: Create directory for BeeGFS metadata
  file:
    path: "{{ meta.directory }}"
    state: directory
  become: true
  notify: Restart BeeGFS meta service

- name: Get device where metadata are stored
  shell:
    cmd: "realpath $(df {{ meta.directory }} | grep '^/' | cut -d' ' -f1)"
  register: _meta_device_path
  changed_when: False

- name: Set FsUUID
  set_fact:
    meta: "{{ meta | combine({'fsuuid': ansible_facts['devices'][_meta_device_path.stdout|basename]['links']['uuids'][0] }) }}"

- name: Create directory for BeeGFS meta config
  file:
    path: "{{ meta.config_path | dirname }}"
    state: directory
  become: true
  notify: Restart BeeGFS meta service

- name: "Copy {{ meta.config_path }}"
  template:
    src: "beegfs-meta.conf.j2"
    dest: "{{ meta.config_path }}"
  become: true
  notify: Restart BeeGFS mgmt service

- name: Prepare metadata block storage
  block:
    - name: Format filesystem
      vars:
        meta_fstype: "{{ beegfs_meta_fstype | default(beegfs_fstype) }}"
      filesystem:
        dev: "{{ beegfs_meta_dev }}"
        fstype: "{{ meta_fstype }}"
        opts: "{{ beegfs_meta_filesystem_opts }}"
        force: "{{ beegfs_force_format }}"
      notify: Restart BeeGFS meta service
    - name: Mount filesystem
      vars:
        meta_fstype: "{{ beegfs_meta_fstype | default(beegfs_fstype) }}"
      mount:
        src: "{{ beegfs_meta_dev }}"
        path: "{{ beegfs_meta_path }}"
        fstype: "{{ meta_fstype }}"
        opts: "{{ beegfs_meta_mount_opts }}"
        state: mounted
      notify: Restart BeeGFS meta service
  become: true
  when:
    - beegfs_meta_dev is defined
    - beegfs_meta_dev != None

- name: Run metadata service setup script
  command: |
    /opt/beegfs/sbin/beegfs-setup-meta -f -C \
    -p {{ meta.directory }} \
    -m {{ meta.mgmtd_host }} \
    -c {{ meta.config_path }} \
    {% if 'node_num_id' in meta %}{{ '-s ' + (meta.node_num_id | string) }}{% endif %}
  args:
    creates: "{{ meta.directory }}/originalNodeID"
  become: true
  notify: Restart BeeGFS meta service
